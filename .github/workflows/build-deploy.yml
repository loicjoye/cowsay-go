---

    name: build and deliver cowsay app
    
    # on:
    #   push:
    #    tags: 'v*'

    on:
        push:
        workflow_dispatch:
          inputs:
            # logLevel:
            #   description: 'Log level'     
            #   required: true
            #   default: 'warning'
            tags:
              description: "Version"   
              required: true
              type: boolean
    
    env:
      REGISTRY: docker.io
      IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/go-cowsay
    
    jobs:
      build:
        name: build go code into binary
        strategy:
          matrix:
            arch:
              - amd64
              - arm64
        runs-on: ubuntu-latest
        steps:

 #---------------------------------------------------           
          - run: |
              echo "Tags: $TAGS"
            env:
              TAGS: ${{ inputs.tags }}
#--------------------------------------------------- 


          - uses: actions/checkout@v4
            with:
                ref: ${{ github.event.inputs.tag }}
    
          - uses: actions/setup-go@v5
            with:
              go-version: '>=1.23'
          
          - run: go version
    
          - run: |
              go build -o ${{ matrix.arch }}/cowsay .
            env:
              GOARCH: ${{ matrix.arch }}
          
          - run: |
              cp Dockerfile ${{ matrix.arch }}/
    
          - name: Upload static files as artifact
            id: deployment
            uses: actions/upload-artifact@v4 # or specific "vX.X.X" version tag for this action
            with:
              path: ${{ matrix.arch }}/
              name: cowsaybin-${{ matrix.arch }}
      
      # deploy:
      #   name: deploy on my self hosted
      #   needs: build
      #   runs-on: ubuntu-latest
      #   steps:
      #     - uses: actions/download-artifact@v4
      #       with:
      #         path: .
      #         name: cowsaybin
      #     - run: | 
      #         chmod u+x cowsay
      #         ./cowsay
      
      push-docker:
        name: push in dockerhub registry
        strategy:
          matrix:
            arch:
              - amd64
              - arm64
        needs: build
        runs-on: ubuntu-latest
        steps:
          - uses: actions/download-artifact@v4
            with:
              path: .
              name: cowsaybin-${{ matrix.arch }}
    
          - run: | 
              chmod u+x cowsay
    
          - run: |
              pwd
              ls -alh
    
          - name: Docker meta
            id: meta
            uses: docker/metadata-action@v5
            with:
              images: |
                ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
    
          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: .
              push: true
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}
              platforms: linux/${{ matrix.arch }}